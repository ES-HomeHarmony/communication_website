"use strict";(self.webpackChunkmicrosite=self.webpackChunkmicrosite||[]).push([[6828],{4617:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});var s=i(4848),r=i(8453);const a={sidebar_position:7},o="Microservices Container Organization",t={id:"containers",title:"Microservices Container Organization",description:"Objective",source:"@site/docs/containers.md",sourceDirName:".",slug:"/containers",permalink:"/communication_website/docs/containers",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"AWS RDS",permalink:"/communication_website/docs/aws_rds"},next:{title:"User Management",permalink:"/communication_website/docs/category/user-management"}},c={},l=[{value:"Objective",id:"objective",level:2},{value:"Microservices Overview",id:"microservices-overview",level:2},{value:"1. House Management Microservice",id:"1-house-management-microservice",level:3},{value:"2. User Management Microservice",id:"2-user-management-microservice",level:3},{value:"Communication Between Microservices",id:"communication-between-microservices",level:2},{value:"Kafka Communication Workflow",id:"kafka-communication-workflow",level:3},{value:"Kafka Topics",id:"kafka-topics",level:3},{value:"Container Organization",id:"container-organization",level:2},{value:"Docker Compose Structure",id:"docker-compose-structure",level:3},{value:"Environment Variables",id:"environment-variables",level:3},{value:"High-Level Architecture Diagram",id:"high-level-architecture-diagram",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"microservices-container-organization",children:"Microservices Container Organization"})}),"\n",(0,s.jsx)(n.h2,{id:"objective",children:"Objective"}),"\n",(0,s.jsx)(n.p,{children:"This document explains the organization and interaction between containers for each microservice and should provide clear guidance on system architecture and deployment."}),"\n",(0,s.jsx)(n.h2,{id:"microservices-overview",children:"Microservices Overview"}),"\n",(0,s.jsx)(n.h3,{id:"1-house-management-microservice",children:"1. House Management Microservice"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": Manages all aspects related to house data, including adding, updating, and retrieving house information and associated expenses."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Database"}),": This service uses a dedicated MySQL database (",(0,s.jsx)(n.code,{children:"house_db"}),") to store house and expense information."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Communication"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Publishes and listens to topics in Kafka to coordinate with other microservices, particularly for validating user actions."}),"\n",(0,s.jsxs)(n.li,{children:["Listens to the ",(0,s.jsx)(n.code,{children:"user-validation-response"})," topic for responses regarding user validation."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-user-management-microservice",children:"2. User Management Microservice"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": Manages user-related information, including authentication, authorization, and profile updates."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Database"}),": This service has its own MySQL database (",(0,s.jsx)(n.code,{children:"user_db"}),") for securely storing user data."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Communication"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Publishes user validation requests to Kafka for other services that require user information."}),"\n",(0,s.jsxs)(n.li,{children:["Responds on the ",(0,s.jsx)(n.code,{children:"user-validation-response"})," topic to confirm the user\u2019s identity and permissions when requested by other services."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"communication-between-microservices",children:"Communication Between Microservices"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"House Management"})," and ",(0,s.jsx)(n.strong,{children:"User Management"})," microservices communicate indirectly through Kafka, which acts as a message broker, enabling asynchronous and decoupled interactions."]}),"\n",(0,s.jsx)(n.h3,{id:"kafka-communication-workflow",children:"Kafka Communication Workflow"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User Validation Request"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The House Management service publishes a message to the ",(0,s.jsx)(n.code,{children:"user-validation-request"})," topic, asking the User Management service to validate a user based on their token or credentials."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User Validation Response"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The User Management service listens to ",(0,s.jsx)(n.code,{children:"user-validation-request"}),", processes the validation request, and then publishes the result to the ",(0,s.jsx)(n.code,{children:"user-validation-response"})," topic."]}),"\n",(0,s.jsx)(n.li,{children:"The House Management service listens to this topic to receive the validation result and proceed with the requested operation if the user is validated successfully."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"kafka-topics",children:"Kafka Topics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"user-validation-request"})}),": Used by the House Management service to request user validation."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"user-validation-response"})}),": Used by the User Management service to respond with validation results."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"container-organization",children:"Container Organization"}),"\n",(0,s.jsx)(n.p,{children:"Each microservice, database, and Kafka broker is containerized, allowing for easy deployment and scaling. Below is the organization of each component:"}),"\n",(0,s.jsx)(n.h3,{id:"docker-compose-structure",children:"Docker Compose Structure"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"House Management Service"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Container Name: ",(0,s.jsx)(n.code,{children:"house_service"})]}),"\n",(0,s.jsxs)(n.li,{children:["Image: Custom-built from the ",(0,s.jsx)(n.code,{children:"house_service"})," Dockerfile."]}),"\n",(0,s.jsx)(n.li,{children:"Environment Variables: Configured to connect to Kafka and its MySQL database."}),"\n",(0,s.jsxs)(n.li,{children:["Database: ",(0,s.jsx)(n.code,{children:"house_db"}),", a MySQL container instance dedicated to the House Management microservice."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"User Management Service"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Container Name: ",(0,s.jsx)(n.code,{children:"user_service"})]}),"\n",(0,s.jsxs)(n.li,{children:["Image: Custom-built from the ",(0,s.jsx)(n.code,{children:"user_service"})," Dockerfile."]}),"\n",(0,s.jsx)(n.li,{children:"Environment Variables: Configured to connect to Kafka and its MySQL database."}),"\n",(0,s.jsxs)(n.li,{children:["Database: ",(0,s.jsx)(n.code,{children:"user_db"}),", a MySQL container instance dedicated to the User Management microservice."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kafka and Zookeeper"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Kafka"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Container Name: ",(0,s.jsx)(n.code,{children:"kafka_broker"})]}),"\n",(0,s.jsx)(n.li,{children:"Purpose: Acts as the message broker for communication between services."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Zookeeper"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Container Name: ",(0,s.jsx)(n.code,{children:"zookeeper"})]}),"\n",(0,s.jsx)(n.li,{children:"Purpose: Manages the Kafka broker to maintain distributed configurations."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,s.jsx)(n.p,{children:"Each microservice container is configured with environment variables to ensure connectivity and security. Key variables include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Database Connections"}),": Host, port, user, password, and database name for connecting to MySQL."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Kafka Connections"}),": Broker URL for establishing Kafka communication."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Service-Specific Variables"}),": Custom configurations, such as API keys and service ports."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"high-level-architecture-diagram",children:"High-Level Architecture Diagram"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:"                        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                        \u2502                         \u2502\n                        \u2502    Kafka Broker         \u2502\n                        \u2502    (Message Queue)      \u2502\n                        \u2502                         \u2502\n                        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                  \u2502\n               \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n               \u2502                  \u2502                    \u2502\n               \u2502                  \u2502                    \u2502\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n \u2502  House Management        \u2502 \u2502 User Management  \u2502 \u2502 Zookeeper        \u2502\n \u2502  Microservice            \u2502 \u2502 Microservice     \u2502 \u2502                  \u2502\n \u2502  - Manages houses        \u2502 \u2502 - Manages users  \u2502 \u2502 Manages Kafka    \u2502\n \u2502  - MySQL `house_db`      \u2502 \u2502 - MySQL `user_db`\u2502 \u2502 coordination     \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>t});var s=i(6540);const r={},a=s.createContext(r);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);